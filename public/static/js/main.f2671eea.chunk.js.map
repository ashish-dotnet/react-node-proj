{"version":3,"sources":["shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/context/auth-context.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainNavigation.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UserList.js","user/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/UpdatePlace.js","user/pages/Auth.js","App.js","index.js"],"names":["logoutTimer","MainHeader","props","className","children","AuthContext","createContext","isLoggedIn","userId","token","login","logout","NavLinks","auth","useContext","to","exact","onClick","SideDrawer","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","Backdrop","ReactDOM","createPortal","document","getElementById","MainNaviation","useState","drawerIsOpen","setDrawerIsClose","closeDrawer","Fragment","ModalOverlay","content","style","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","onCancel","Button","href","size","inverse","danger","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Card","Avatar","src","image","alt","width","height","UserItem","id","name","placeCount","UserList","items","length","map","user","key","places","Users","loadedUsers","setLoadedUsers","process","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","ceter","click","NewPlace","title","description","address","inputHandler","history","useHistory","placeSubmitHandler","formData","FormData","append","Authorization","Map","mapRef","center","zoom","window","google","maps","Marker","position","PlaceItem","showMap","setShowMap","showConfirmModal","setshowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","coordinates","creatorId","PlaceList","undefined","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","deletedPlaceId","prevPlace","filter","UpdatePlace","loadedPlace","setLoadedPlace","placeId","setFormData","fetchPlace","placeUpdateSubmitHandler","JSON","stringify","Auth","isLoginMode","setIsLoginMode","email","password","authsubmitHandler","prevMode","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.f2671eea.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate = expirationDate// || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n      expirationDate || new Date(new Date().getTime() + 2000);\r\n\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  });\r\n  const logout = useCallback((uid, token) => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from \"react\";\r\nimport './MainHeader.css'\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\nexport default MainHeader;\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nimport \"./NavLinks.css\";\r\n\r\nconst NavLinks = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          All USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport \"./SideDrawer.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst SideDrawer = (props) => {\r\n  return (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n    </CSSTransition>\r\n  );\r\n};\r\nexport default SideDrawer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"./../UIElements/Backdrop\";\r\nimport \"./MainNavigation.css\";\r\nconst MainNaviation = (props) => {\r\n  const [drawerIsOpen, setDrawerIsClose] = useState(false);\r\n  const openDrawer = () => {\r\n    setDrawerIsClose(true);\r\n  };\r\n  const closeDrawer = () => {\r\n    setDrawerIsClose(false);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawer} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawer}>\r\n        <nav className=\"main-navigation_drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n      <MainHeader>\r\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawer}>\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">YourPlaces</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default MainNaviation;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Modal;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState();\r\n  const [error, setError] = useState(false);\r\n\r\n  const activeHttpRequests = useRef([]);\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n        const responseData = await response.json();\r\n        // activeHttpRequests.current = activeHttpRequests.current.filter(\r\n        //   (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        // );\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message); //to handel error\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./UserItem.css\";\r\n\r\nconst UserItem = (props) => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar image={`http://localhost:5000/${props.image}`} alt={props.name} />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} - {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\nexport default UserItem;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport UserItem from \"./UserItem\";\r\nimport \"./UserList.css\";\r\n\r\nconst UserList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n        <h2>No Users Found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map((user) => {\r\n        return (\r\n          <UserItem\r\n            key={user.id}\r\n            id={user.id}\r\n            image={user.image}\r\n            name={user.name}\r\n            placeCount={user.places}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nexport default UserList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nimport UserList from \"../components/UserList\";\r\n\r\nconst Users = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL+\"users\"\r\n        );\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n  let unloadSpinner = false;\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UserList items={loadedUsers}></UserList>}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Users;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer,useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue ||\"\",\r\n    isValid: props.initialValid ||false,\r\n    isTouched: false,\r\n  });\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value,isValid);\r\n  }, [id, isValid, value, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\": \r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.ceter && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Pls pick an image</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\nexport default ImageUpload;\r\n","import React, { useContext } from \"react\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport \"./NewPlace.css\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      // formData.append(\"creator\", auth.userId);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(process.env.REACT_APP_BACKEND_URL+\"places\", \"POST\", formData, {\r\n        Authorization: \"Bearer \" + auth.token,\r\n      });\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter valid title\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter valid description (at least 5 char).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter valid Adress\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide image\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default NewPlace;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport './Map.css'\r\n\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n  const {center,zoom }= props\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom,\r\n    });\r\n\r\n    new window.google.maps.Marker({ position: center, map: map });\r\n  }, [center,zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n};\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport \"./PlaceItem.css\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const { isLoading, error, clearError, sendRequest } = useHttpClient();\r\n\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setshowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setshowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setshowConfirmModal(false);\r\n  };\r\n  const confirmDeleteHandler = async () => {\r\n    setshowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        { Authorization: \"Bearer \" + auth.token }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}> CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you Sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>Do you want to DELETE?</p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`http://localhost:5000/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div>\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport \"./PlaceList.css\";\r\n\r\nconst PlaceList = (props) => {\r\n  if (props.items === undefined ||props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No Places Found.Maybe create ne?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          address={place.address}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\n\r\n// const DUMMY_PLACES = [\r\n//   {\r\n//     id: \"p1\",\r\n//     title: \"Empire State Building\",\r\n//     description: \"One of the most\",\r\n//     imageUrl:\r\n//       \"https://lh5.googleusercontent.com/p/AF1QipNVlM5lo7fIJrmvjN4EOrTMiQjDgDyTfw7ATdV6=w408-h272-k-no\",\r\n//     address: \"20 W 34th St, New York, NY 10001, United States\",\r\n//     location: {\r\n//       lat: 40.7484405,\r\n//       lng: -73.9878584,\r\n//     },\r\n//     creator: \"u1\",\r\n//   },\r\n//   {\r\n//     id: \"p2\",\r\n//     title: \"Empire State Building\",\r\n//     description: \"One of the most\",\r\n//     imageUrl:\r\n//       \"https://lh5.googleusercontent.com/p/AF1QipNVlM5lo7fIJrmvjN4EOrTMiQjDgDyTfw7ATdV6=w408-h272-k-no\",\r\n//     address: \"20 W 34th St, New York, NY 10001, United States\",\r\n//     location: {\r\n//       lat: 40.7484405,\r\n//       lng: -73.9856644,\r\n//     },\r\n//     creator: \"u2\",\r\n//   },\r\n// ];\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, clearError, sendRequest } = useHttpClient();\r\n\r\n  // const userId = \"6277a64444ba127eb5f6beb0\";\r\n  // let a = useParams().userId;\r\n  // useEffect(() => {\r\n  //   const fetchPlaces = async () => {\r\n  //     try {\r\n  //       const responseData = await sendRequest(\r\n  //         `${process.env.REACT_APP_BACKEND_URL}places/user/${userId}`\r\n  //       );\r\n  //       setLoadedPlaces(responseData.places);\r\n  //     } catch (err) {}\r\n  //   };\r\n  //   fetchPlaces();\r\n  // }, [sendRequest, userId]);\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  // const loadedPlaces = DUMMY_PLACES.filter((place) => place.creator === userId);\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlace) =>\r\n      prevPlace.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport \"./NewPlace.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\n// const DUMMY_PLACES = [\r\n//   {\r\n//     id: \"p1\",\r\n//     title: \"Empire State Building\",\r\n//     description: \"One of the most\",\r\n//     imageUrl:\r\n//       \"https://lh5.googleusercontent.com/p/AF1QipNVlM5lo7fIJrmvjN4EOrTMiQjDgDyTfw7ATdV6=w408-h272-k-no\",\r\n//     address: \"20 W 34th St, New York, NY 10001, United States\",\r\n//     location: {\r\n//       lat: 40.7484405,\r\n//       lng: -73.9878584,\r\n//     },\r\n//     creator: \"u1\",\r\n//   },\r\n//   {\r\n//     id: \"p2\",\r\n//     title: \"Empire State Building\",\r\n//     description: \"One of the most\",\r\n//     imageUrl:\r\n//       \"https://lh5.googleusercontent.com/p/AF1QipNVlM5lo7fIJrmvjN4EOrTMiQjDgDyTfw7ATdV6=w408-h272-k-no\",\r\n//     address: \"20 W 34th St, New York, NY 10001, United States\",\r\n//     location: {\r\n//       lat: 40.7484405,\r\n//       lng: -73.9856644,\r\n//     },\r\n//     creator: \"u2\",\r\n//   },\r\n// ];\r\nconst UpdatePlace = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n  const placeId = useParams().placeId;\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  const history = useHistory();\r\n\r\n  // const identifiedPlace = DUMMY_PLACES.find((p) => p.id === placeId);\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}places/${placeId}`\r\n        );\r\n        setLoadedPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (err) {}\r\n    };\r\n    fetchPlace();\r\n  }, [setFormData, sendRequest, placeId]);\r\n\r\n  const placeUpdateSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}places/${placeId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n        }), \r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \"+auth.token\r\n        }\r\n      );\r\n      history.push(\"/\" + auth.userId + \"/places\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid tile\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description(min  5 char)\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default UpdatePlace;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport LoadingSpiner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport \"./Auth.css\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: { value: \"\", isValid: false },\r\n          image: { value: null, isValid: false },\r\n        },\r\n        false\r\n      );\r\n    }\r\n\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const authsubmitHandler = async (event) => {\r\n    // let del = process.env;\r\n    event.preventDefault();\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"users/login\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            // name: formState.inputs.name.value,\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n          // body:\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"users/signup\",\r\n          \"POST\",\r\n          formData\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpiner asOverlay></LoadingSpiner>}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authsubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name \"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n\r\n          {!isLoginMode && (\r\n            <ImageUpload center id=\"image\" onInput={inputHandler} />\r\n          )}\r\n          <Input\r\n            id=\"email\"\r\n            element=\"input\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter valid email address\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            type=\"Password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter valid passwords\"\r\n            onInput={inputHandler}\r\n          />\r\n\r\n          <Button type=\"Submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {!isLoginMode ? \"LOGIN\" : \"SIGNUP\"}!\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\";\nimport { Switch } from \"react-router-dom\";\n\nimport MainNaviation from \"./shared/components/Navigation/MainNavigation\";\nimport Users from \"./user/pages/Users\";\nimport NewPlaces from \"./places/pages/NewPlace\";\nimport UserPlaces from \"./places/pages/UserPlaces\";\nimport UpdatePlace from \"./places/pages/UpdatePlace\";\nimport Auth from \"./user/pages/Auth\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\nconst App = () => {\n  const { token, login, logout ,userId} = useAuth();\n\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\">\n          <NewPlaces />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        userId: userId,\n        isLoggedIn: !!token,\n        token: token,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNaviation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}